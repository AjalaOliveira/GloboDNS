- @page_title = @domain.name

%div{ :style => "display: none;" }
  #record-template-new
    Create a new record for this domain
  #soa-record-edit
    Edit the SOA record's details
  #zone-edit
    Edit this domain's details
  #note-new
    Adds a note with miscellaneous info to the domain
  #note-edit
    Edit the domains's current note
  #delete-zone
    Permantly remove this domain from the system
  #change-owner
    Change or remove the owner of this domain
  #help-primary-ns
    This is the fully qualified domain name (FQDN) of the primary name server
    of the domain.
  #help-contact
    The primary contact of the domain, usualy the DNS administrator's email
    address would be entered here.
  #help-refresh
    Indicates the time when the slave will try to refresh the zone from the 
    master. RFC 1912 recommends 1200 to 43200 seconds, low (1200) if the data is
    volatile or 43200 (12 hours) if it's not. If you are using NOTIFY you can 
    set for much higher values e.g. 1 or more days > 86400.
  #help-retry
    It defines the time between retries if the slave (secondary) fails to 
    contact the master when refresh (above) has expired. Typical values would be
    180 (3 minutes) to 900 (15 minutes) or higher.
  #help-expire
    Indicates when the zone data is no longer authoritative. Applies to Slaves 
    or Secondaries servers only. BIND9 slaves stop responding to queries for the
    zone when this time has expired and no contact has been made with the 
    master.
  #help-minimum
    RFC 2308 (implemented by BIND 9) redefined this value to be the negative 
    caching time - the time a NAME ERROR = NXDOMAIN record is cached. The 
    maximum value allowed by BIND 9 for this parameter is 3 hours (10800 
    seconds).

%h1.underline
  = @domain.name

#domain-name.padded
  %table.grid
    %tr
      %td Domain
      %td= @domain.name
      %td= link_to prototip_info_icon('database_delete.png', 'delete-zone'), domain_path( @domain ), :method => :delete, :confirm => "Are you sure you want to remove #{@domain.name}?"
    - if current_user.admin?
      %tr
        %td Owner
        %td
          #owner-info
            - if @domain.user
              = @domain.user.login
            - else
              \-
          #owner-edit{ :style => 'display: none' }
            - remote_form_for( :domain, @domain, :url => formatted_change_owner_domain_path( @domain, :js ), :html => { :method => :put } ) do |f|
              = f.collection_select "user_id", @users, :id, :login, :include_blank => true
              = submit_tag "Save"
        %td= link_to_function prototip_info_icon('user_edit.png', 'change-owner'), "changeOwner()"
    %tr
      %td{ :valign => 'top' } Notes
      %td{ :colspan => 2 }
        #note-row
          = @domain.notes
          %br
          = link_to_function prototip_info_icon('note_edit.png', 'note-edit'), "showNote()"

        #note{ :style => "display: none;" }
          - remote_form_for( :domain, @domain, :url => formatted_update_note_domain_path( @domain, :js ), :html => { :method => :put } ) do |f|
            = f.text_area :notes, :rows => 5, :cols => 17
            %br/
            = link_to_function "Cancel", "hideNote()"
            = submit_tag "Update note"

#domain-soa.padded
  %h2.underline
    SOA Record
    &nbsp;
    = link_to_function prototip_info_icon('database_edit.png', 'soa-record-edit'), "showSOAEdit()"
  = render :partial => '/domains/soa_record', :object => @domain.soa_record

  #soa-edit-form{ :style => "display: none;" }
    - remote_form_for( @domain.soa_record, :url => formatted_update_soa_record_path( @domain.soa_record, :js, :domain_id => @domain.id ), :html => { :method => :put } ) do |f|
      %table.grid
        %tr
          %td Primary name server
          %td= f.text_field :primary_ns
          %td= prototip_help_icon('help-primary-ns')
        %tr
          %td Contact
          %td= f.text_field :contact
          %td= prototip_help_icon('help-contact')
        %tr
          %td Refresh
          %td
            = f.text_field :refresh, :size => 6
            = prototip_help_icon('help-refresh')
          %td &nbsp;
        %tr
          %td Retry
          %td
            = f.text_field :retry, :size => 6
            = prototip_help_icon('help-retry')
          %td &nbsp;
        %tr
          %td Expire
          %td
            = f.text_field :expire, :size => 6
            = prototip_help_icon('help-expire') 
          %td &nbsp;
        %tr
          %td Minimum
          %td
            = f.text_field :minimum, :size => 6
            = prototip_help_icon('help-minimum')
          %td &nbsp;
        %tr
          %td.right= link_to_function "Cancel", "showSOAForm()"
          %td= submit_tag "Update"
          %td &nbsp;

#domain-records.padded
  %h2.underline Domain RR's
  %table.gridwide#record-table
    %tr
      %td.small Hostname
      %td.small TTL
      %td.small Type
      %td.small Priority
      %td.small Data
      %td &nbsp;
    = render :partial => 'record', :collection => @domain.records_without_soa

= link_to_function prototip_info_icon('database_add.png', 'record-template-new'), "displayRecordForm()"
= link_to_function "New record", "displayRecordForm()"

#record-form{ :style => "display: none;" }
  - remote_form_for( :record, @record, :url => formatted_domain_records_path( @domain, :js ), :html => { :id => 'record-form' } ) do |f|
    #record-form-div
      %table
        %tr
          %td Type
          %td
            = f.select( :type, RecordTemplate.record_types.map{ |t| [t,t] } - [["SOA", "SOA"]])
            = observe_field "record_type", :function => "toggleRecordFields(element,value)"
        %tr
          %td Host
          %td= f.text_field :name
        %tr
          %td TTL
          %td= f.text_field :ttl, :size => 6
        %tr.rt-mx{ :style => 'display :none' }
          %td Priority
          %td= f.text_field :prio, :size => 6
        %tr
          %td Data
          %td= f.text_field :content
        %tr.rt-soa{ :style => 'display :none' }
          %td Primary Name Server
          %td= f.text_field :primary_ns
        %tr.rt-soa{ :style => 'display :none' }
          %td Contact
          %td= f.text_field :contact
        %tr.rt-soa{ :style => 'display :none' }
          %td Refresh
          %td= f.text_field :refresh, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Retry
          %td= f.text_field :retry, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Expire
          %td= f.text_field :expire, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Minimum
          %td= f.text_field :minimum, :size => 6
        %tr
          %td &nbsp;
          %td
            = link_to_function "Cancel", "hideRecordForm()"
            = submit_tag "Create"

:javascript
  function editRecord(id, type) {
    $('show_' + type + '_' + id).hide();
    $('edit_' + type + '_' + id).show();
  }
  function hideRecord(id, type) {
    $('edit_' + type + '_' + id).hide();
    $('show_' + type + '_' + id).show();
  }
  function displayRecordForm() {
    $('record-form').show();
  }
  function hideRecordForm() {
    $('record-form').hide();
  }
  function toggleRecordFields(e,v){
    t = 'rt-' + v.toLowerCase();
    $('record-form-div').select('tr').each(function(r){
      if(r.className && r.className != t)
        r.hide();
      else
        r.show();
    });
  }
  function showNote() {
    $('note-row').hide();
    $('note').show();
  }
  function hideNote() {
    $('note').hide();
    $('note-row').show();
  }
  function showSOAEdit() {
    $('soa-form').hide();
    $('soa-edit-form').show();
  }
  function showSOAForm() {
    $('soa-edit-form').hide();
    $('soa-form').show();
  }
  function changeOwner() {
    $('owner-info').toggle();
    $('owner-edit').toggle();
  }
