- @page_title = @zone.name

%div{ :style => "display: none;" }
  #record-template-new
    Create a new record for this zone
  #soa-record-edit
    Edit the SOA record's details
  #zone-edit
    Edit this zone's details
  #note-new
    Adds a note with miscellaneous info to the zone
    %br/
    NB: Notes can't be deleted
  #note-edit
    Edit the zone's current note

%h1.underline
  = @zone.name

#domain-name.padded
  %table.grid
    %tr
      %td Domain
      %td= @zone.name
    %tr
      %td{ :valign => 'top' } Notes
      %td
        #note-row
          = @zone.notes
          %br
          = link_to_function prototip_info_icon('note_edit.png', 'note-edit'), "showNote()"

        #note{ :style => "display: none;" }
          - remote_form_for( :zone, @zone, :url => formatted_update_note_zone_path( @zone, :js ), :html => { :method => :put } ) do |f|
            = f.text_area :notes, :rows => 5, :cols => 17
            %br/
            = link_to_function "Cancel", "hideNote()"
            = submit_tag "Update note"


#domain-soa.padded
  %h2.underline
    SOA Record
    &nbsp;
    = link_to_function prototip_info_icon('database_edit.png', 'soa-record-edit'), "showSOAEdit()"
  = render :partial => '/zones/soa_record', :object => @zone.soa_record

  #soa-edit-form{ :style => "display: none;" }
    - remote_form_for( :record, :url => formatted_update_soa_record_path( @zone.soa_record, :js, :zone_id => @zone.id ), :html => { :method => :put } ) do |f|
      %table.grid
        %tr
          %td Primary name server
          %td= f.text_field :primary_ns
        %tr
          %td Contact
          %td= f.text_field :contact
        %tr
          %td Refresh
          %td= f.text_field :refresh
        %tr
          %td Retry
          %td= f.text_field :retry
        %tr
          %td Expire
          %td= f.text_field :expire
        %tr
          %td Minimum
          %td= f.text_field :minimum
        %tr
          %td
          %td
            = link_to_function "Cancel", "showSOAForm()"
            = submit_tag "Update"

#domain-records.padded
  %h2.underline Zone records
  %table.grid#record-table
    %tr
      %td.small Hostname
      %td.small TTL
      %td.small Type
      %td.small Priority
      %td.small Data
      %td &nbsp;
    = render :partial => 'record', :collection => @zone.records_without_soa

= link_to_function prototip_info_icon('database_add.png', 'record-template-new'), "displayRecordForm()"
= link_to_function "New record", "displayRecordForm()"

#record-form{ :style => "display: none;" }
  - remote_form_for( :record, @record, :url => formatted_zone_records_path( @zone, :js ), :html => { :id => 'record-form' } ) do |f|
    #record-form-div
      %table
        %tr
          %td Type
          %td
            = f.select( :type, RecordTemplate.record_types.map{ |t| [t,t] } - [["SOA", "SOA"]])
            = observe_field "record_type", :function => "toggleRecordFields(element,value)"
        %tr
          %td Host
          %td= f.text_field :host
        %tr
          %td TTL
          %td= f.text_field :ttl, :size => 6
        %tr.rt-mx{ :style => 'display :none' }
          %td Priority
          %td= f.text_field :priority, :size => 6
        %tr
          %td Data
          %td= f.text_field :data
        %tr.rt-soa{ :style => 'display :none' }
          %td Primary Name Server
          %td= f.text_field :primary_ns
        %tr.rt-soa{ :style => 'display :none' }
          %td Contact
          %td= f.text_field :contact
        %tr.rt-soa{ :style => 'display :none' }
          %td Refresh
          %td= f.text_field :refresh, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Retry
          %td= f.text_field :retry, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Expire
          %td= f.text_field :expire, :size => 6
        %tr.rt-soa{ :style => 'display :none' }
          %td Minimum
          %td= f.text_field :minimum, :size => 6
        %tr
          %td &nbsp;
          %td
            = link_to_function "Cancel", "hideRecordForm()"
            = submit_tag "Create"

:javascript
  function editRecord(id, type) {
    $('show_' + type + '_' + id).hide();
    $('edit_' + type + '_' + id).show();
  }
  function hideRecord(id, type) {
    $('edit_' + type + '_' + id).hide();
    $('show_' + type + '_' + id).show();
  }
  function displayRecordForm() {
    $('record-form').show();
  }
  function hideRecordForm() {
    $('record-form').hide();
  }
  function toggleRecordFields(e,v){
    t = 'rt-' + v.toLowerCase();
    $('record-form-div').select('tr').each(function(r){
      if(r.className && r.className != t)
        r.hide();
      else
        r.show();
    });
  }
  function showNote() {
    $('note-row').hide();
    $('note').show();
  }
  function hideNote() {
    $('note').hide();
    $('note-row').show();
  }
  function showSOAEdit() {
    $('soa-form').hide();
    $('soa-edit-form').show();
  }
  function showSOAForm() {
    $('soa-edit-form').hide();
    $('soa-form').show();
  }
